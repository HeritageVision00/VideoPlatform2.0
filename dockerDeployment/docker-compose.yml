# version: '3' // deprecated

# networks:
#   dev:
#     external: true

services:
  multi-tenant-server:
    # networks:
    #   - dev
    ports:
      - "3300:3300"
    # network_mode: host
    build:
      context: ../server
      # dockerfile: DockerfileLightNode
    image: graymaticsinc/multi-tenant-server
    restart: always
    env_file:
      - ../configDocker.env
    volumes:
      - ./resources:/usr/src/app/resources
      # - ../configDocker.env:/usr/src/config.env

  multi-tenant-ui:
    image: graymaticsinc/multi-tenant-ui
    # networks:
    #   - dev
    build:
      context: ../client
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  
  multi-tenant-pythonServer:
    # network_mode: host
    ports:
      - "3330:3330"
    # networks:
    #   - dev
    image: graymaticsinc/multi-tenant-python
    build:
      context: ../pythonServer
      # dockerfile: DockerfileLatest
    restart: always
    volumes:
      - ./resources:/usr/src/app/resources
    env_file:
      - ../configDocker.env
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu]

  
  # multi-tenant-healthStatus:
  #   # network_mode: host
  #   # networks:
  #   #   - dev
  #   image: graymaticsinc/multi-tenant-healthstatus
  #   build:
  #     context: ../healthStatus
  #   restart: always
  #   env_file:
  #     - ../configDocker.env

  multi-tenant-ws:
    # network_mode: host
    ports:
      - "3301:3301"
    # networks:
    #   - dev
    image: graymaticsinc/multi-tenant-ws
    build:
      context: ../wsServer
      # dockerfile: DockerfileLightNode
    restart: always
    volumes:
      - ../configDocker.env:/usr/src/config.env
      - ./resources:/usr/src/app/resources

  multi-tenant-proxy:
    # network_mode: host
    ports:
      - "3302:3302"
    # networks:
    #   - dev
    image: graymaticsinc/multi-tenant-proxy
    build:
      context: ../proxy
      # dockerfile: DockerfileLightNode
    restart: always
    volumes:
      - ../configDocker.env:/usr/src/config.env
      - ./resources:/usr/src/app/resources
    